{"version":3,"sources":["store/ducks/user.js","store/ducks/products.js","Components/Input.js","Components/AutoSuggest.js","Components/UserForm.js","Pages/DataCollection.js","Components/Search.js","Components/Nav.js","Components/Product.js","Components/ProductsList.js","Pages/Products.js","Router.js","store/ducks/index.js","store/index.js","serviceWorker.js","index.js"],"names":["initialState","firstName","lastName","email","phone","street","city","state","hasLocation","getVisibleProducts","products","query","queryFilter","prop","product","toLowerCase","includes","filter","flat","match","idx","self","indexOf","setSearchValue","value","type","payload","collection","searchValue","Input","_ref","id","label","placeholder","onChange","classes","pattern","disabled","required","react_default","a","createElement","className","htmlFor","e","target","getSuggestionValue","suggestion","description","renderSuggestion","AutoSuggest","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","suggestions","noSuggestions","service","handleScriptLoad","bind","assertThisInitialized","onSuggestionSelected","onSuggestionsFetchRequested","onSuggestionsClearRequested","event","newValue","setState","props","fillForm","_this2","_ref2","getQueryPredictions","input","status","google","maps","places","PlacesServiceStatus","OK","_ref3","_suggestion$terms","slicedToArray","terms","number","concat","AutocompleteService","_this$state","inputProps","lib_default","url","process","onLoad","dist_default","Component","withRouter","connect","submitForm","data","setProductSearchQuery","history","_useState","useState","_useState2","setFirstName","_useState3","_useState4","setLastName","_useState5","_useState6","setPhone","_useState7","_useState8","setEmail","_useState9","_useState10","setStreet","_useState11","_useState12","setCity","_useState13","_useState14","_useState15","_useState16","search","setSearch","isValid","every","trim","AutoSuggest_AutoSuggest","onClick","push","DataCollectionPage","location","Components_UserForm","Nav","Components_Search","defaultSrc","Product","name","brand","category","kind_subtype","kind","src","photos","urls","small","kindSub","alt","toUpperCase","href","length","map","p","assign","key","user","count","address","react_router_dom","to","Components_ProductsList","App","basename","react_router","path","exact","component","DataCollection","ProductsPage","combineReducers","arguments","undefined","objectSpread","addressState","store","createStore","rootReducer","devToolsEnhancer","Boolean","window","hostname","ReactDOM","render","es","Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.52493ef5.chunk.js","sourcesContent":["// actionTypes\nconst SET_VALUES = 'SET_VALUES';\n\n// actionCreators\nexport const setUserData = data => ({ type: SET_VALUES, payload: data });\n\n// reducer\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  phone: '',\n  street: '',\n  city: '',\n  state: '',\n  hasLocation: false,\n};\n\nexport default function(state = initialState, { type, payload }) {\n  switch (type) {\n    case SET_VALUES:\n      const { firstName, lastName, email, phone, street, city, state: addressState } = payload;\n      return {\n        ...state,\n        firstName,\n        lastName,\n        email,\n        phone,\n        street,\n        city,\n        state: addressState,\n        hasLocation: true\n      }\n    default:\n      return state;\n  }\n}","import { products } from '../../products.json';\n\n// actionTypes\nconst SET_SEARCH_VALUE = 'SET_SEARCH_VALUE';\n\n// selectors\nexport const getVisibleProducts = (products, query) => {\n  if (!query) return products;\n  const queryFilter = prop => product => product[prop] && product[prop].toLowerCase().includes(query.toLowerCase());\n  const names = products.filter(queryFilter('name'));\n  const brands = products.filter(queryFilter('brand'));\n  const categories = products.filter(queryFilter('category'));\n  const kinds = products.filter(queryFilter('kind'));\n  const kind_subtypes = products.filter(queryFilter('kind_subtype'));\n  const descriptions = products.filter(queryFilter('description'));\n  return [names, brands, categories, kinds, kind_subtypes, descriptions]\n    .flat()\n    .filter((match, idx, self) => self.indexOf(match) === idx);\n}\n\nexport const setSearchValue = value => ({ type: 'SET_SEARCH_VALUE', payload: value });\n\n// reducer\nconst initialState = {\n  collection: products,\n  searchValue: '',\n};\n\nexport default function(state = initialState, { type, payload }) {\n  switch (type) {\n    case SET_SEARCH_VALUE:\n      return {\n        ...state,\n        searchValue: payload,\n      }\n    default:\n      return state;\n  }\n}","import React from 'react';\n\nexport default function Input({ id, type, label, placeholder, value, onChange, classes, pattern, disabled, required }) {\n  return (\n    <div className={classes}>\n      {!disabled && <label htmlFor={id}>{label || placeholder}</label>}\n      <input\n        id={id}\n        type={type}\n        className=\"form-control\"\n        placeholder={placeholder}\n        value={value}\n        onChange={e => onChange(e.target.value)}\n        required={required}\n        disabled={disabled}\n        pattern={pattern}\n      />\n    </div>\n  );\n}","import React, { Component } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport Script from 'react-load-script';\n\nconst API_KEY = process.env.REACT_APP_MAPS_API_KEY;\n\nconst getSuggestionValue = suggestion => suggestion.description;\nconst renderSuggestion = suggestion => (<div>{suggestion.description}</div>);\n\nexport default class AutoSuggest extends Component {\n  constructor() {\n    super();\n    this.state = { value: '', suggestions: [], noSuggestions: false };\n    this.service = null;\n    this.handleScriptLoad = this.handleScriptLoad.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onSuggestionSelected = this.onSuggestionSelected.bind(this);\n    this.onSuggestionsFetchRequested = this.onSuggestionsFetchRequested.bind(this);\n    this.onSuggestionsClearRequested = this.onSuggestionsClearRequested.bind(this);\n  }\n\n  onChange(event, { newValue }) {\n    this.setState({ value: newValue });\n    if (!newValue) this.props.fillForm({ street: '', city: '', state: '' });\n  }\n\n  onSuggestionsFetchRequested({ value }) {\n    this.service.getQueryPredictions({ input: value }, (suggestions, status) => {\n      status !== google.maps.places.PlacesServiceStatus.OK ?\n        this.setState({ suggestions: [], noSuggestions: true }) :\n        this.setState({ suggestions, noSuggestions: false });\n    });\n  }\n\n  onSuggestionsClearRequested() {\n    this.setState({ suggestions: [], noSuggestions: false });\n  }\n  \n  onSuggestionSelected(event, { suggestion }) {\n    const [{ value: number }, { value: street }, { value: city }, { value: state }] = suggestion.terms;\n    this.props.fillForm({ street: `${number} ${street}`, city, state });\n  }\n  \n  handleScriptLoad() {\n    /* global google */\n    this.service = new google.maps.places.AutocompleteService();\n  }\n\n  render() {\n    const { value, suggestions, noSuggestions } = this.state;\n\n    const inputProps = {\n      placeholder: 'Type your address',\n      value,\n      onChange: this.onChange,\n      className: 'form-control',\n    };\n\n    return (\n      <div className={this.props.classes}>\n        <Script\n          url={`https://maps.googleapis.com/maps/api/js?key=${API_KEY}&libraries=places`}\n          onLoad={this.handleScriptLoad}\n        />\n        <Autosuggest\n          suggestions={suggestions}\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n          onSuggestionSelected={this.onSuggestionSelected}\n          getSuggestionValue={getSuggestionValue}\n          renderSuggestion={renderSuggestion}\n          inputProps={inputProps}\n          required\n        />\n        {noSuggestions &&\n          <div className=\"react-autosuggest__suggestions-container--open no-suggestions\">\n            Couldn't find that address, try again please\n          </div>}\n      </div>\n    );\n  }\n}","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { setUserData } from '../store/ducks/user';\nimport { setSearchValue } from '../store/ducks/products';\n\nimport Input from './Input';\nimport AutoSuggest from './AutoSuggest';\n\nfunction UserForm({ submitForm, setProductSearchQuery, history }) {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const [street, setStreet] = useState('');\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [search, setSearch] = useState('');\n  const isValid = [firstName, lastName, phone, email, street, city, state].every(e => !!e.trim());\n  function setAddress({ street, city, state }) {\n    setStreet(street);\n    setCity(city);\n    setState(state);\n  }\n  function handleSubmit() {\n    submitForm({ firstName, lastName, phone, email, street, city, state });\n    setProductSearchQuery(search);\n    history.push('/products');\n  }\n  return (\n    <form>\n      <div className=\"form-row\">\n        <Input id=\"firstName\" type=\"text\" placeholder=\"First name\" value={firstName} onChange={setFirstName} classes=\"col-md-6 mb-3\" required/>\n        <Input id=\"lastName\" type=\"text\" placeholder=\"Last name\" value={lastName} onChange={setLastName} classes=\"col-md-6 mb-3\" required/>\n      </div>\n      <div className=\"form-row\">\n        <Input id=\"phone\" type=\"tel\" label=\"Phone\" placeholder=\"Format: 123-456-7890\" value={phone} onChange={setPhone} classes=\"col-md-6 mb-3\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" required/>\n        <Input id=\"email\" type=\"email\" placeholder=\"Email\" value={email} onChange={setEmail} classes=\"col-md-6 mb-3\" required/>\n      </div>\n      <div className=\"form-row\">\n        <AutoSuggest classes=\"col-md-12 mb-3\" fillForm={setAddress} required />\n      </div>\n      <div className=\"form-row\">\n        <Input id=\"street\" type=\"text\" placeholder=\"Street\" value={street} classes=\"col-md-8 mb-3\" required disabled/>\n      </div>\n      <div className=\"form-row\">\n        <Input id=\"city\" type=\"text\" placeholder=\"City\" value={city} classes=\"col-md-6 mb-3\" required disabled/>\n        <Input id=\"state\" type=\"text\" placeholder=\"State\" value={state} classes=\"col-md-6 mb-3\" required disabled/>\n      </div>\n      <div className=\"form-row\">\n        <Input id=\"search\" type=\"text\" label=\"Product search\" placeholder=\"Try CBD, flower, or hybrid\" value={search} onChange={setSearch} classes=\"col-md-6 mb-3\" />\n      </div>\n      <button className=\"btn btn-primary\" type=\"submit\" onClick={handleSubmit} disabled={!isValid}>Next</button>\n    </form>\n  );\n}\n\nexport default withRouter(connect(null, { submitForm: setUserData, setProductSearchQuery: setSearchValue })(UserForm));","import React from 'react';\n\nimport UserForm from '../Components/UserForm';\n\nexport default function DataCollectionPage({ location }) {\n  return (\n    <div className=\"d-flex flex-column container-fluid justify-content-center m-3 p-3\">\n      <header>\n        <h2 className=\"d-flex justify-content-center mb-5\">Cannabis Marketplace</h2>\n      </header>\n      <section className=\"d-flex justify-content-center\">\n        <UserForm />\n      </section>\n    </div>\n  );\n}","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { setSearchValue } from '../store/ducks/products';\n\nfunction Search({ value, setSearchValue }) {\n  return (\n    <form className=\"form-inline\">\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => setSearchValue(e.target.value)}\n        className=\"form-control mr-sm-2\"\n        placeholder=\"Search\"\n      />\n    </form>\n  )\n}\n\nfunction mapStateToProps(state) {\n  const { searchValue } = state.products;\n  return { value: searchValue };\n}\n\nexport default connect(mapStateToProps, { setSearchValue })(Search);","import React from 'react';\n\nimport Search from './Search';\n\nexport default function Nav() {\n  return (\n    <nav className=\"navbar navbar-dark bg-dark\">\n      <span className=\"navbar-brand\">Cannabis Marketplace</span>\n      <Search />\n    </nav>\n  )\n}","import React from 'react';\n\nconst defaultSrc = 'https://s3-us-west-1.amazonaws.com/iheartjane/images/stock_photos/general/indica.png';\n\nexport default function Product({ name, brand, category, kind_subtype, kind, photos }) {\n  const src = photos[0].urls.small;\n  const kindSub = kind_subtype || kind;\n  return (\n    <div className=\"col-auto mb-3\">\n      <div className=\"card\">\n        <img src={src || defaultSrc} className=\"card-img-top\" alt=\"...\" />\n        <div className=\"card-body\">\n          <h5 className=\"card-title text-muted\">{category && category.toUpperCase()}</h5>\n          <h4 className=\"card-title\">{name}</h4>\n          <h5 className=\"card-subtitle mb-2\">{brand}</h5>\n          <h6 className=\"card-subtitle mb-5 text-muted\">{kindSub && kindSub.toUpperCase()}</h6>\n          <a href=\"#add\" className=\"btn btn-success\">Add to Cart</a>\n        </div>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { getVisibleProducts } from '../store/ducks/products';\n\nimport Product from './Product';\n\nfunction ProductsList({ products }) {\n  if (!products.length) return <h3 className=\"d-flex justify-content-center m-3\">No Results</h3>\n  return (\n    <section className=\"row justify-content-center mt-3\">\n      {products.map(p => <Product key={p.id} {...p} />)}\n    </section>\n  );\n}\n\nfunction mapStateToProps({ products }) {\n  const { collection, searchValue } = products;\n  const visibleProducts = getVisibleProducts(collection, searchValue);\n  return { products: visibleProducts };\n}\n\nexport default connect(mapStateToProps)(ProductsList);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { getVisibleProducts } from '../store/ducks/products';\n\nimport Nav from '../Components/Nav';\nimport ProductsList from '../Components/ProductsList';\n\nfunction ProductsPage({ count, address }) {\n  const location = address ? `near ${address}` : 'in all cities';\n  return (\n    <div>\n      <Nav />\n      <h5 className=\"mt-3 ml-3\">Found {count} products {location}</h5>\n      <Link to=\"/\" className=\"ml-3\">Change Location</Link>\n      <ProductsList />\n    </div>\n  );\n}\n\nfunction mapStateToProps({ user, products }) {\n  const { collection, searchValue } = products;\n  const { city, state, hasLocation } = user;\n  const visibleProducts = getVisibleProducts(collection, searchValue);\n  const count = visibleProducts.length;\n  const address = hasLocation ? `${city}, ${state}` : '';\n  return { count, address };\n}\n\nexport default connect(mapStateToProps)(ProductsPage);","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport DataCollection from './Pages/DataCollection';\nimport ProductsPage from './Pages/Products';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Route path='/' exact component={DataCollection} />\n      <Route path='/products/' component={ProductsPage} />\n    </Router>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nimport products from './products';\nimport user from './user';\n\nexport default combineReducers({\n  products,\n  user,\n});","import { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension/developmentOnly';\n\nimport rootReducer from './ducks';\n\nconst store = createStore(rootReducer, devToolsEnhancer());\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport Router from './Router';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}